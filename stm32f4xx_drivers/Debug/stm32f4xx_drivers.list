
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006c8  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800088c  08000894  00010894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800088c  0800088c  00010894  2**0
                  CONTENTS
  4 .ARM          00000000  0800088c  0800088c  00010894  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800088c  08000894  00010894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800088c  0800088c  0001088c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000890  08000890  00010890  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000894  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000894  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010894  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000941  00000000  00000000  000108c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000024f  00000000  00000000  00011205  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b0  00000000  00000000  00011458  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000088  00000000  00000000  00011508  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000136f  00000000  00000000  00011590  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a78  00000000  00000000  000128ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000540b  00000000  00000000  00013377  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018782  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001fc  00000000  00000000  00018800  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000874 	.word	0x08000874

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000874 	.word	0x08000874

08000204 <delay>:
#include "stm32f446E.h"



void delay(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for (uint32_t i=0; i<500000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a04      	ldr	r2, [pc, #16]	; (800022c <delay+0x28>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	0007a11f 	.word	0x0007a11f

08000230 <main>:




int main(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0
	GPIO_Handle_t Gpioled;

	GPIO_Handle_t GpioBtn;

	//led configuration
	Gpioled.pGPIOx =GPIOA;
 8000236:	4b1a      	ldr	r3, [pc, #104]	; (80002a0 <main+0x70>)
 8000238:	60fb      	str	r3, [r7, #12]
	Gpioled.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_0;
 800023a:	2300      	movs	r3, #0
 800023c:	743b      	strb	r3, [r7, #16]
	Gpioled.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_OUT;
 800023e:	2301      	movs	r3, #1
 8000240:	747b      	strb	r3, [r7, #17]
	Gpioled.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000242:	2302      	movs	r3, #2
 8000244:	74bb      	strb	r3, [r7, #18]
	Gpioled.GPIO_PinConfig.GPIO_PinOPType = GPIO_OUT_TYPE_PP;
 8000246:	2300      	movs	r3, #0
 8000248:	753b      	strb	r3, [r7, #20]
	Gpioled.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800024a:	2300      	movs	r3, #0
 800024c:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	4813      	ldr	r0, [pc, #76]	; (80002a0 <main+0x70>)
 8000252:	f000 f853 	bl	80002fc <GPIO_PeriClockControl>
	GPIO_Init(&Gpioled);
 8000256:	f107 030c 	add.w	r3, r7, #12
 800025a:	4618      	mov	r0, r3
 800025c:	f000 f91e 	bl	800049c <GPIO_Init>



	//button configuration
	GpioBtn.pGPIOx =GPIOB;
 8000260:	4b10      	ldr	r3, [pc, #64]	; (80002a4 <main+0x74>)
 8000262:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_12;
 8000264:	230c      	movs	r3, #12
 8000266:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_IN;
 8000268:	2300      	movs	r3, #0
 800026a:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026c:	2302      	movs	r3, #2
 800026e:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 8000270:	2301      	movs	r3, #1
 8000272:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 8000274:	2101      	movs	r1, #1
 8000276:	480b      	ldr	r0, [pc, #44]	; (80002a4 <main+0x74>)
 8000278:	f000 f840 	bl	80002fc <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 800027c:	463b      	mov	r3, r7
 800027e:	4618      	mov	r0, r3
 8000280:	f000 f90c 	bl	800049c <GPIO_Init>



	while (1)
	{
		if (!GPIO_ReadFromInputPin(GPIOB,GPIO_PIN_NUM_12))
 8000284:	210c      	movs	r1, #12
 8000286:	4807      	ldr	r0, [pc, #28]	; (80002a4 <main+0x74>)
 8000288:	f000 faa4 	bl	80007d4 <GPIO_ReadFromInputPin>
 800028c:	4603      	mov	r3, r0
 800028e:	2b00      	cmp	r3, #0
 8000290:	d1f8      	bne.n	8000284 <main+0x54>
				{
					delay();//debounce prevention
 8000292:	f7ff ffb7 	bl	8000204 <delay>
					GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NUM_0);
 8000296:	2100      	movs	r1, #0
 8000298:	4801      	ldr	r0, [pc, #4]	; (80002a0 <main+0x70>)
 800029a:	f000 fab1 	bl	8000800 <GPIO_ToggleOutputPin>
		if (!GPIO_ReadFromInputPin(GPIOB,GPIO_PIN_NUM_12))
 800029e:	e7f1      	b.n	8000284 <main+0x54>
 80002a0:	40020000 	.word	0x40020000
 80002a4:	40020400 	.word	0x40020400

080002a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a8:	480d      	ldr	r0, [pc, #52]	; (80002e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002aa:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ac:	480d      	ldr	r0, [pc, #52]	; (80002e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ae:	490e      	ldr	r1, [pc, #56]	; (80002e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b0:	4a0e      	ldr	r2, [pc, #56]	; (80002ec <LoopForever+0xe>)
  movs r3, #0
 80002b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b4:	e002      	b.n	80002bc <LoopCopyDataInit>

080002b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ba:	3304      	adds	r3, #4

080002bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c0:	d3f9      	bcc.n	80002b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c2:	4a0b      	ldr	r2, [pc, #44]	; (80002f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c4:	4c0b      	ldr	r4, [pc, #44]	; (80002f4 <LoopForever+0x16>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c8:	e001      	b.n	80002ce <LoopFillZerobss>

080002ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002cc:	3204      	adds	r2, #4

080002ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d0:	d3fb      	bcc.n	80002ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002d2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002d6:	f000 faa9 	bl	800082c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002da:	f7ff ffa9 	bl	8000230 <main>

080002de <LoopForever>:

LoopForever:
    b LoopForever
 80002de:	e7fe      	b.n	80002de <LoopForever>
  ldr   r0, =_estack
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ec:	08000894 	.word	0x08000894
  ldr r2, =_sbss
 80002f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f4:	2000001c 	.word	0x2000001c

080002f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <GPIO_PeriClockControl>:
* ReturnVal:	none
* Notes:		none
*/

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	6078      	str	r0, [r7, #4]
 8000304:	460b      	mov	r3, r1
 8000306:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 8000308:	78fb      	ldrb	r3, [r7, #3]
 800030a:	2b01      	cmp	r3, #1
 800030c:	d157      	bne.n	80003be <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a59      	ldr	r2, [pc, #356]	; (8000478 <GPIO_PeriClockControl+0x17c>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PERICLK_EN();
 8000316:	4b59      	ldr	r3, [pc, #356]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a58      	ldr	r2, [pc, #352]	; (800047c <GPIO_PeriClockControl+0x180>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PERICLK_DI();
		}

	}
}
 8000322:	e0a3      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a56      	ldr	r2, [pc, #344]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x3e>
			GPIOB_PERICLK_EN();
 800032c:	4b53      	ldr	r3, [pc, #332]	; (800047c <GPIO_PeriClockControl+0x180>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a52      	ldr	r2, [pc, #328]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000332:	f043 0302 	orr.w	r3, r3, #2
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e098      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a51      	ldr	r2, [pc, #324]	; (8000484 <GPIO_PeriClockControl+0x188>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x54>
			GPIOC_PERICLK_EN();
 8000342:	4b4e      	ldr	r3, [pc, #312]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a4d      	ldr	r2, [pc, #308]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000348:	f043 0304 	orr.w	r3, r3, #4
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e08d      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a4d      	ldr	r2, [pc, #308]	; (8000488 <GPIO_PeriClockControl+0x18c>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x6a>
			GPIOD_PERICLK_EN();
 8000358:	4b48      	ldr	r3, [pc, #288]	; (800047c <GPIO_PeriClockControl+0x180>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a47      	ldr	r2, [pc, #284]	; (800047c <GPIO_PeriClockControl+0x180>)
 800035e:	f043 0308 	orr.w	r3, r3, #8
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	e082      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a48      	ldr	r2, [pc, #288]	; (800048c <GPIO_PeriClockControl+0x190>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0x80>
			GPIOE_PERICLK_EN();
 800036e:	4b43      	ldr	r3, [pc, #268]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000372:	4a42      	ldr	r2, [pc, #264]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000374:	f043 0310 	orr.w	r3, r3, #16
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037a:	e077      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a44      	ldr	r2, [pc, #272]	; (8000490 <GPIO_PeriClockControl+0x194>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_PeriClockControl+0x96>
			GPIOF_PERICLK_EN();
 8000384:	4b3d      	ldr	r3, [pc, #244]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000388:	4a3c      	ldr	r2, [pc, #240]	; (800047c <GPIO_PeriClockControl+0x180>)
 800038a:	f043 0320 	orr.w	r3, r3, #32
 800038e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000390:	e06c      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a3f      	ldr	r2, [pc, #252]	; (8000494 <GPIO_PeriClockControl+0x198>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_PeriClockControl+0xac>
			GPIOG_PERICLK_EN();
 800039a:	4b38      	ldr	r3, [pc, #224]	; (800047c <GPIO_PeriClockControl+0x180>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039e:	4a37      	ldr	r2, [pc, #220]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a6:	e061      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a3b      	ldr	r2, [pc, #236]	; (8000498 <GPIO_PeriClockControl+0x19c>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d15d      	bne.n	800046c <GPIO_PeriClockControl+0x170>
			GPIOH_PERICLK_EN();
 80003b0:	4b32      	ldr	r3, [pc, #200]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b4:	4a31      	ldr	r2, [pc, #196]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003b6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003bc:	e056      	b.n	800046c <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a2d      	ldr	r2, [pc, #180]	; (8000478 <GPIO_PeriClockControl+0x17c>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d106      	bne.n	80003d4 <GPIO_PeriClockControl+0xd8>
			GPIOA_PERICLK_DI();
 80003c6:	4b2d      	ldr	r3, [pc, #180]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ca:	4a2c      	ldr	r2, [pc, #176]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003cc:	f023 0301 	bic.w	r3, r3, #1
 80003d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d2:	e04b      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a2a      	ldr	r2, [pc, #168]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d106      	bne.n	80003ea <GPIO_PeriClockControl+0xee>
			GPIOB_PERICLK_DI();
 80003dc:	4b27      	ldr	r3, [pc, #156]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e0:	4a26      	ldr	r2, [pc, #152]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003e2:	f023 0302 	bic.w	r3, r3, #2
 80003e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e8:	e040      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4a25      	ldr	r2, [pc, #148]	; (8000484 <GPIO_PeriClockControl+0x188>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d106      	bne.n	8000400 <GPIO_PeriClockControl+0x104>
			GPIOC_PERICLK_DI();
 80003f2:	4b22      	ldr	r3, [pc, #136]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f6:	4a21      	ldr	r2, [pc, #132]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003f8:	f023 0304 	bic.w	r3, r3, #4
 80003fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fe:	e035      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a21      	ldr	r2, [pc, #132]	; (8000488 <GPIO_PeriClockControl+0x18c>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d106      	bne.n	8000416 <GPIO_PeriClockControl+0x11a>
			GPIOD_PERICLK_DI();
 8000408:	4b1c      	ldr	r3, [pc, #112]	; (800047c <GPIO_PeriClockControl+0x180>)
 800040a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040c:	4a1b      	ldr	r2, [pc, #108]	; (800047c <GPIO_PeriClockControl+0x180>)
 800040e:	f023 0308 	bic.w	r3, r3, #8
 8000412:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000414:	e02a      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4a1c      	ldr	r2, [pc, #112]	; (800048c <GPIO_PeriClockControl+0x190>)
 800041a:	4293      	cmp	r3, r2
 800041c:	d106      	bne.n	800042c <GPIO_PeriClockControl+0x130>
			GPIOE_PERICLK_DI();
 800041e:	4b17      	ldr	r3, [pc, #92]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000420:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000422:	4a16      	ldr	r2, [pc, #88]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000424:	f023 0310 	bic.w	r3, r3, #16
 8000428:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042a:	e01f      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	4a18      	ldr	r2, [pc, #96]	; (8000490 <GPIO_PeriClockControl+0x194>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d106      	bne.n	8000442 <GPIO_PeriClockControl+0x146>
			GPIOF_PERICLK_DI();
 8000434:	4b11      	ldr	r3, [pc, #68]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000436:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000438:	4a10      	ldr	r2, [pc, #64]	; (800047c <GPIO_PeriClockControl+0x180>)
 800043a:	f023 0320 	bic.w	r3, r3, #32
 800043e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000440:	e014      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4a13      	ldr	r2, [pc, #76]	; (8000494 <GPIO_PeriClockControl+0x198>)
 8000446:	4293      	cmp	r3, r2
 8000448:	d106      	bne.n	8000458 <GPIO_PeriClockControl+0x15c>
			GPIOG_PERICLK_DI();
 800044a:	4b0c      	ldr	r3, [pc, #48]	; (800047c <GPIO_PeriClockControl+0x180>)
 800044c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044e:	4a0b      	ldr	r2, [pc, #44]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000450:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000454:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000456:	e009      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	4a0f      	ldr	r2, [pc, #60]	; (8000498 <GPIO_PeriClockControl+0x19c>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d105      	bne.n	800046c <GPIO_PeriClockControl+0x170>
			GPIOH_PERICLK_DI();
 8000460:	4b06      	ldr	r3, [pc, #24]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000462:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000464:	4a05      	ldr	r2, [pc, #20]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000466:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800046a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800046c:	bf00      	nop
 800046e:	370c      	adds	r7, #12
 8000470:	46bd      	mov	sp, r7
 8000472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000476:	4770      	bx	lr
 8000478:	40020000 	.word	0x40020000
 800047c:	40023800 	.word	0x40023800
 8000480:	40020400 	.word	0x40020400
 8000484:	40020800 	.word	0x40020800
 8000488:	40020c00 	.word	0x40020c00
 800048c:	40021000 	.word	0x40021000
 8000490:	40021400 	.word	0x40021400
 8000494:	40021800 	.word	0x40021800
 8000498:	40021c00 	.word	0x40021c00

0800049c <GPIO_Init>:
* Parameter1:	Handle of GPIO port
* ReturnVal:	none
* Notes:		none
*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{	uint32_t temp=0;
 800049c:	b480      	push	{r7}
 800049e:	b089      	sub	sp, #36	; 0x24
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
 80004a4:	2300      	movs	r3, #0
 80004a6:	61bb      	str	r3, [r7, #24]
	//see if its not an interrupt mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b03      	cmp	r3, #3
 80004ae:	d81f      	bhi.n	80004f0 <GPIO_Init+0x54>
	{
		//configure pin mode
		temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	795b      	ldrb	r3, [r3, #5]
 80004b4:	461a      	mov	r2, r3
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	791b      	ldrb	r3, [r3, #4]
 80004ba:	005b      	lsls	r3, r3, #1
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	61bb      	str	r3, [r7, #24]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clear bit fields before setting
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	681a      	ldr	r2, [r3, #0]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	4619      	mov	r1, r3
 80004ce:	2303      	movs	r3, #3
 80004d0:	408b      	lsls	r3, r1
 80004d2:	43db      	mvns	r3, r3
 80004d4:	4619      	mov	r1, r3
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	400a      	ands	r2, r1
 80004dc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |=temp; //set bits
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	6819      	ldr	r1, [r3, #0]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	69ba      	ldr	r2, [r7, #24]
 80004ea:	430a      	orrs	r2, r1
 80004ec:	601a      	str	r2, [r3, #0]
 80004ee:	e0c7      	b.n	8000680 <GPIO_Init+0x1e4>

	}
	//else configure for  interrupt mode
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	2b04      	cmp	r3, #4
 80004f6:	d117      	bne.n	8000528 <GPIO_Init+0x8c>
		{
			//1. configure Falling trigger selection register
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f8:	4b48      	ldr	r3, [pc, #288]	; (800061c <GPIO_Init+0x180>)
 80004fa:	68db      	ldr	r3, [r3, #12]
 80004fc:	687a      	ldr	r2, [r7, #4]
 80004fe:	7912      	ldrb	r2, [r2, #4]
 8000500:	4611      	mov	r1, r2
 8000502:	2201      	movs	r2, #1
 8000504:	408a      	lsls	r2, r1
 8000506:	4611      	mov	r1, r2
 8000508:	4a44      	ldr	r2, [pc, #272]	; (800061c <GPIO_Init+0x180>)
 800050a:	430b      	orrs	r3, r1
 800050c:	60d3      	str	r3, [r2, #12]
			//Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050e:	4b43      	ldr	r3, [pc, #268]	; (800061c <GPIO_Init+0x180>)
 8000510:	689b      	ldr	r3, [r3, #8]
 8000512:	687a      	ldr	r2, [r7, #4]
 8000514:	7912      	ldrb	r2, [r2, #4]
 8000516:	4611      	mov	r1, r2
 8000518:	2201      	movs	r2, #1
 800051a:	408a      	lsls	r2, r1
 800051c:	43d2      	mvns	r2, r2
 800051e:	4611      	mov	r1, r2
 8000520:	4a3e      	ldr	r2, [pc, #248]	; (800061c <GPIO_Init+0x180>)
 8000522:	400b      	ands	r3, r1
 8000524:	6093      	str	r3, [r2, #8]
 8000526:	e035      	b.n	8000594 <GPIO_Init+0xf8>

		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	795b      	ldrb	r3, [r3, #5]
 800052c:	2b05      	cmp	r3, #5
 800052e:	d117      	bne.n	8000560 <GPIO_Init+0xc4>
		{
			//1. configure Rising trigger selection register
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000530:	4b3a      	ldr	r3, [pc, #232]	; (800061c <GPIO_Init+0x180>)
 8000532:	689b      	ldr	r3, [r3, #8]
 8000534:	687a      	ldr	r2, [r7, #4]
 8000536:	7912      	ldrb	r2, [r2, #4]
 8000538:	4611      	mov	r1, r2
 800053a:	2201      	movs	r2, #1
 800053c:	408a      	lsls	r2, r1
 800053e:	4611      	mov	r1, r2
 8000540:	4a36      	ldr	r2, [pc, #216]	; (800061c <GPIO_Init+0x180>)
 8000542:	430b      	orrs	r3, r1
 8000544:	6093      	str	r3, [r2, #8]
			//Clear corresponding FTSR bit
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	4b35      	ldr	r3, [pc, #212]	; (800061c <GPIO_Init+0x180>)
 8000548:	68db      	ldr	r3, [r3, #12]
 800054a:	687a      	ldr	r2, [r7, #4]
 800054c:	7912      	ldrb	r2, [r2, #4]
 800054e:	4611      	mov	r1, r2
 8000550:	2201      	movs	r2, #1
 8000552:	408a      	lsls	r2, r1
 8000554:	43d2      	mvns	r2, r2
 8000556:	4611      	mov	r1, r2
 8000558:	4a30      	ldr	r2, [pc, #192]	; (800061c <GPIO_Init+0x180>)
 800055a:	400b      	ands	r3, r1
 800055c:	60d3      	str	r3, [r2, #12]
 800055e:	e019      	b.n	8000594 <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	795b      	ldrb	r3, [r3, #5]
 8000564:	2b06      	cmp	r3, #6
 8000566:	d115      	bne.n	8000594 <GPIO_Init+0xf8>
		{
			//1. configure Falling and Rising trigger selection register
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000568:	4b2c      	ldr	r3, [pc, #176]	; (800061c <GPIO_Init+0x180>)
 800056a:	68db      	ldr	r3, [r3, #12]
 800056c:	687a      	ldr	r2, [r7, #4]
 800056e:	7912      	ldrb	r2, [r2, #4]
 8000570:	4611      	mov	r1, r2
 8000572:	2201      	movs	r2, #1
 8000574:	408a      	lsls	r2, r1
 8000576:	4611      	mov	r1, r2
 8000578:	4a28      	ldr	r2, [pc, #160]	; (800061c <GPIO_Init+0x180>)
 800057a:	430b      	orrs	r3, r1
 800057c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057e:	4b27      	ldr	r3, [pc, #156]	; (800061c <GPIO_Init+0x180>)
 8000580:	689b      	ldr	r3, [r3, #8]
 8000582:	687a      	ldr	r2, [r7, #4]
 8000584:	7912      	ldrb	r2, [r2, #4]
 8000586:	4611      	mov	r1, r2
 8000588:	2201      	movs	r2, #1
 800058a:	408a      	lsls	r2, r1
 800058c:	4611      	mov	r1, r2
 800058e:	4a23      	ldr	r2, [pc, #140]	; (800061c <GPIO_Init+0x180>)
 8000590:	430b      	orrs	r3, r1
 8000592:	6093      	str	r3, [r2, #8]
		}
		//2. configure GPIO port selection in SYSCFG_EXTIC
		uint8_t temp1 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4; //to get which exti control register
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	791b      	ldrb	r3, [r3, #4]
 8000598:	089b      	lsrs	r3, r3, #2
 800059a:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4; //to determine section within control register determined above
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	f003 0303 	and.w	r3, r3, #3
 80005a4:	75bb      	strb	r3, [r7, #22]
		uint8_t portcode = 0;
 80005a6:	2300      	movs	r3, #0
 80005a8:	77fb      	strb	r3, [r7, #31]

		if(pGPIOHandle->pGPIOx == GPIOA){portcode=0;}
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4a1c      	ldr	r2, [pc, #112]	; (8000620 <GPIO_Init+0x184>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d102      	bne.n	80005ba <GPIO_Init+0x11e>
 80005b4:	2300      	movs	r3, #0
 80005b6:	77fb      	strb	r3, [r7, #31]
 80005b8:	e047      	b.n	800064a <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOB){portcode=1;}
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a19      	ldr	r2, [pc, #100]	; (8000624 <GPIO_Init+0x188>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d102      	bne.n	80005ca <GPIO_Init+0x12e>
 80005c4:	2301      	movs	r3, #1
 80005c6:	77fb      	strb	r3, [r7, #31]
 80005c8:	e03f      	b.n	800064a <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOC){portcode=2;}
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	4a16      	ldr	r2, [pc, #88]	; (8000628 <GPIO_Init+0x18c>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d102      	bne.n	80005da <GPIO_Init+0x13e>
 80005d4:	2302      	movs	r3, #2
 80005d6:	77fb      	strb	r3, [r7, #31]
 80005d8:	e037      	b.n	800064a <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOD){portcode=3;}
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	4a13      	ldr	r2, [pc, #76]	; (800062c <GPIO_Init+0x190>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d102      	bne.n	80005ea <GPIO_Init+0x14e>
 80005e4:	2303      	movs	r3, #3
 80005e6:	77fb      	strb	r3, [r7, #31]
 80005e8:	e02f      	b.n	800064a <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOE){portcode=4;}
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a10      	ldr	r2, [pc, #64]	; (8000630 <GPIO_Init+0x194>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d102      	bne.n	80005fa <GPIO_Init+0x15e>
 80005f4:	2304      	movs	r3, #4
 80005f6:	77fb      	strb	r3, [r7, #31]
 80005f8:	e027      	b.n	800064a <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOF){portcode=5;}
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a0d      	ldr	r2, [pc, #52]	; (8000634 <GPIO_Init+0x198>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d102      	bne.n	800060a <GPIO_Init+0x16e>
 8000604:	2305      	movs	r3, #5
 8000606:	77fb      	strb	r3, [r7, #31]
 8000608:	e01f      	b.n	800064a <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOG){portcode=6;}
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	4a0a      	ldr	r2, [pc, #40]	; (8000638 <GPIO_Init+0x19c>)
 8000610:	4293      	cmp	r3, r2
 8000612:	d113      	bne.n	800063c <GPIO_Init+0x1a0>
 8000614:	2306      	movs	r3, #6
 8000616:	77fb      	strb	r3, [r7, #31]
 8000618:	e017      	b.n	800064a <GPIO_Init+0x1ae>
 800061a:	bf00      	nop
 800061c:	40013c00 	.word	0x40013c00
 8000620:	40020000 	.word	0x40020000
 8000624:	40020400 	.word	0x40020400
 8000628:	40020800 	.word	0x40020800
 800062c:	40020c00 	.word	0x40020c00
 8000630:	40021000 	.word	0x40021000
 8000634:	40021400 	.word	0x40021400
 8000638:	40021800 	.word	0x40021800
		else if(pGPIOHandle->pGPIOx == GPIOH){portcode=7;}
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	4a60      	ldr	r2, [pc, #384]	; (80007c4 <GPIO_Init+0x328>)
 8000642:	4293      	cmp	r3, r2
 8000644:	d101      	bne.n	800064a <GPIO_Init+0x1ae>
 8000646:	2307      	movs	r3, #7
 8000648:	77fb      	strb	r3, [r7, #31]

		SYSCFG_PERICLK_EN();
 800064a:	4b5f      	ldr	r3, [pc, #380]	; (80007c8 <GPIO_Init+0x32c>)
 800064c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800064e:	4a5e      	ldr	r2, [pc, #376]	; (80007c8 <GPIO_Init+0x32c>)
 8000650:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000654:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000656:	7ffa      	ldrb	r2, [r7, #31]
 8000658:	7dbb      	ldrb	r3, [r7, #22]
 800065a:	009b      	lsls	r3, r3, #2
 800065c:	fa02 f103 	lsl.w	r1, r2, r3
 8000660:	4a5a      	ldr	r2, [pc, #360]	; (80007cc <GPIO_Init+0x330>)
 8000662:	7dfb      	ldrb	r3, [r7, #23]
 8000664:	3302      	adds	r3, #2
 8000666:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3. enable EXTI interrupt delivery via IMR
		EXTI->IMR |= 1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800066a:	4b59      	ldr	r3, [pc, #356]	; (80007d0 <GPIO_Init+0x334>)
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	687a      	ldr	r2, [r7, #4]
 8000670:	7912      	ldrb	r2, [r2, #4]
 8000672:	4611      	mov	r1, r2
 8000674:	2201      	movs	r2, #1
 8000676:	408a      	lsls	r2, r1
 8000678:	4611      	mov	r1, r2
 800067a:	4a55      	ldr	r2, [pc, #340]	; (80007d0 <GPIO_Init+0x334>)
 800067c:	430b      	orrs	r3, r1
 800067e:	6013      	str	r3, [r2, #0]
	}
	//configure speed
	temp=0;
 8000680:	2300      	movs	r3, #0
 8000682:	61bb      	str	r3, [r7, #24]
	temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	799b      	ldrb	r3, [r3, #6]
 8000688:	461a      	mov	r2, r3
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	791b      	ldrb	r3, [r3, #4]
 800068e:	005b      	lsls	r3, r3, #1
 8000690:	fa02 f303 	lsl.w	r3, r2, r3
 8000694:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->OSPEEDR  &= ~(0x3 <<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	689a      	ldr	r2, [r3, #8]
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	791b      	ldrb	r3, [r3, #4]
 80006a0:	4619      	mov	r1, r3
 80006a2:	2303      	movs	r3, #3
 80006a4:	408b      	lsls	r3, r1
 80006a6:	43db      	mvns	r3, r3
 80006a8:	4619      	mov	r1, r3
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	400a      	ands	r2, r1
 80006b0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6899      	ldr	r1, [r3, #8]
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	69ba      	ldr	r2, [r7, #24]
 80006be:	430a      	orrs	r2, r1
 80006c0:	609a      	str	r2, [r3, #8]
	//configure pullup/pulldown
	temp=0;
 80006c2:	2300      	movs	r3, #0
 80006c4:	61bb      	str	r3, [r7, #24]
	temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	79db      	ldrb	r3, [r3, #7]
 80006ca:	461a      	mov	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->PUPDR  &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	68da      	ldr	r2, [r3, #12]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	791b      	ldrb	r3, [r3, #4]
 80006e2:	4619      	mov	r1, r3
 80006e4:	2303      	movs	r3, #3
 80006e6:	408b      	lsls	r3, r1
 80006e8:	43db      	mvns	r3, r3
 80006ea:	4619      	mov	r1, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	400a      	ands	r2, r1
 80006f2:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	68d9      	ldr	r1, [r3, #12]
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	681b      	ldr	r3, [r3, #0]
 80006fe:	69ba      	ldr	r2, [r7, #24]
 8000700:	430a      	orrs	r2, r1
 8000702:	60da      	str	r2, [r3, #12]
	//configure output type
	temp=0;
 8000704:	2300      	movs	r3, #0
 8000706:	61bb      	str	r3, [r7, #24]
	temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	7a1b      	ldrb	r3, [r3, #8]
 800070c:	461a      	mov	r2, r3
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	791b      	ldrb	r3, [r3, #4]
 8000712:	fa02 f303 	lsl.w	r3, r2, r3
 8000716:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->OTYPER  &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	685a      	ldr	r2, [r3, #4]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	791b      	ldrb	r3, [r3, #4]
 8000722:	4619      	mov	r1, r3
 8000724:	2301      	movs	r3, #1
 8000726:	408b      	lsls	r3, r1
 8000728:	43db      	mvns	r3, r3
 800072a:	4619      	mov	r1, r3
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	400a      	ands	r2, r1
 8000732:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	6859      	ldr	r1, [r3, #4]
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	69ba      	ldr	r2, [r7, #24]
 8000740:	430a      	orrs	r2, r1
 8000742:	605a      	str	r2, [r3, #4]

	temp=0;
 8000744:	2300      	movs	r3, #0
 8000746:	61bb      	str	r3, [r7, #24]

	if((pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode) == GPIO_MODE_ALTFN)
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	7a5b      	ldrb	r3, [r3, #9]
 800074c:	2b02      	cmp	r3, #2
 800074e:	d132      	bne.n	80007b6 <GPIO_Init+0x31a>
	{
		//Need to revisit this to understand
		uint32_t temp1, temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	791b      	ldrb	r3, [r3, #4]
 8000754:	08db      	lsrs	r3, r3, #3
 8000756:	b2db      	uxtb	r3, r3
 8000758:	613b      	str	r3, [r7, #16]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	791b      	ldrb	r3, [r3, #4]
 800075e:	f003 0307 	and.w	r3, r3, #7
 8000762:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->AFR[temp1]&= ~(0xF<<(4*temp2));
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	693a      	ldr	r2, [r7, #16]
 800076a:	3208      	adds	r2, #8
 800076c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000770:	68fb      	ldr	r3, [r7, #12]
 8000772:	009b      	lsls	r3, r3, #2
 8000774:	210f      	movs	r1, #15
 8000776:	fa01 f303 	lsl.w	r3, r1, r3
 800077a:	43db      	mvns	r3, r3
 800077c:	4619      	mov	r1, r3
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	4011      	ands	r1, r2
 8000784:	693a      	ldr	r2, [r7, #16]
 8000786:	3208      	adds	r2, #8
 8000788:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode<<(4*temp2));
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	693a      	ldr	r2, [r7, #16]
 8000792:	3208      	adds	r2, #8
 8000794:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	7a5b      	ldrb	r3, [r3, #9]
 800079c:	4619      	mov	r1, r3
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	009b      	lsls	r3, r3, #2
 80007a2:	fa01 f303 	lsl.w	r3, r1, r3
 80007a6:	4619      	mov	r1, r3
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	4311      	orrs	r1, r2
 80007ae:	693a      	ldr	r2, [r7, #16]
 80007b0:	3208      	adds	r2, #8
 80007b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}




}
 80007b6:	bf00      	nop
 80007b8:	3724      	adds	r7, #36	; 0x24
 80007ba:	46bd      	mov	sp, r7
 80007bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c0:	4770      	bx	lr
 80007c2:	bf00      	nop
 80007c4:	40021c00 	.word	0x40021c00
 80007c8:	40023800 	.word	0x40023800
 80007cc:	40013800 	.word	0x40013800
 80007d0:	40013c00 	.word	0x40013c00

080007d4 <GPIO_ReadFromInputPin>:
* Parameter2:	GPIO pin in range of 0 to 16
* ReturnVal:	0 or 1
* Notes:		none
*/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007d4:	b480      	push	{r7}
 80007d6:	b085      	sub	sp, #20
 80007d8:	af00      	add	r7, sp, #0
 80007da:	6078      	str	r0, [r7, #4]
 80007dc:	460b      	mov	r3, r1
 80007de:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	691a      	ldr	r2, [r3, #16]
 80007e4:	78fb      	ldrb	r3, [r7, #3]
 80007e6:	fa22 f303 	lsr.w	r3, r2, r3
 80007ea:	b2db      	uxtb	r3, r3
 80007ec:	f003 0301 	and.w	r3, r3, #1
 80007f0:	73fb      	strb	r3, [r7, #15]

}
 80007f2:	bf00      	nop
 80007f4:	4618      	mov	r0, r3
 80007f6:	3714      	adds	r7, #20
 80007f8:	46bd      	mov	sp, r7
 80007fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007fe:	4770      	bx	lr

08000800 <GPIO_ToggleOutputPin>:
* Parameter2:	Pin of GPIO port
* ReturnVal:	none
* Notes:		none
*/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000800:	b480      	push	{r7}
 8000802:	b083      	sub	sp, #12
 8000804:	af00      	add	r7, sp, #0
 8000806:	6078      	str	r0, [r7, #4]
 8000808:	460b      	mov	r3, r1
 800080a:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1<<PinNumber);
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	695b      	ldr	r3, [r3, #20]
 8000810:	78fa      	ldrb	r2, [r7, #3]
 8000812:	2101      	movs	r1, #1
 8000814:	fa01 f202 	lsl.w	r2, r1, r2
 8000818:	405a      	eors	r2, r3
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	615a      	str	r2, [r3, #20]


}
 800081e:	bf00      	nop
 8000820:	370c      	adds	r7, #12
 8000822:	46bd      	mov	sp, r7
 8000824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000828:	4770      	bx	lr
	...

0800082c <__libc_init_array>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	4e0d      	ldr	r6, [pc, #52]	; (8000864 <__libc_init_array+0x38>)
 8000830:	4c0d      	ldr	r4, [pc, #52]	; (8000868 <__libc_init_array+0x3c>)
 8000832:	1ba4      	subs	r4, r4, r6
 8000834:	10a4      	asrs	r4, r4, #2
 8000836:	2500      	movs	r5, #0
 8000838:	42a5      	cmp	r5, r4
 800083a:	d109      	bne.n	8000850 <__libc_init_array+0x24>
 800083c:	4e0b      	ldr	r6, [pc, #44]	; (800086c <__libc_init_array+0x40>)
 800083e:	4c0c      	ldr	r4, [pc, #48]	; (8000870 <__libc_init_array+0x44>)
 8000840:	f000 f818 	bl	8000874 <_init>
 8000844:	1ba4      	subs	r4, r4, r6
 8000846:	10a4      	asrs	r4, r4, #2
 8000848:	2500      	movs	r5, #0
 800084a:	42a5      	cmp	r5, r4
 800084c:	d105      	bne.n	800085a <__libc_init_array+0x2e>
 800084e:	bd70      	pop	{r4, r5, r6, pc}
 8000850:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000854:	4798      	blx	r3
 8000856:	3501      	adds	r5, #1
 8000858:	e7ee      	b.n	8000838 <__libc_init_array+0xc>
 800085a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800085e:	4798      	blx	r3
 8000860:	3501      	adds	r5, #1
 8000862:	e7f2      	b.n	800084a <__libc_init_array+0x1e>
 8000864:	0800088c 	.word	0x0800088c
 8000868:	0800088c 	.word	0x0800088c
 800086c:	0800088c 	.word	0x0800088c
 8000870:	08000890 	.word	0x08000890

08000874 <_init>:
 8000874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000876:	bf00      	nop
 8000878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800087a:	bc08      	pop	{r3}
 800087c:	469e      	mov	lr, r3
 800087e:	4770      	bx	lr

08000880 <_fini>:
 8000880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000882:	bf00      	nop
 8000884:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000886:	bc08      	pop	{r3}
 8000888:	469e      	mov	lr, r3
 800088a:	4770      	bx	lr
