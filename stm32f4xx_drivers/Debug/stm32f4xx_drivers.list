
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000824  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009e8  080009f0  000109f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009e8  080009e8  000109f0  2**0
                  CONTENTS
  4 .ARM          00000000  080009e8  080009e8  000109f0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009e8  080009f0  000109f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009e8  080009e8  000109e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009ec  080009ec  000109ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080009f0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080009f0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000109f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009cb  00000000  00000000  00010a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000267  00000000  00000000  000113eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011658  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00011720  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000013b2  00000000  00000000  000117c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000ab3  00000000  00000000  00012b72  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000056a4  00000000  00000000  00013625  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018cc9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000268  00000000  00000000  00018d44  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080009d0 	.word	0x080009d0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080009d0 	.word	0x080009d0

08000204 <main>:




int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t Gpioled;

	GPIO_Handle_t GpioBtn;

	//led configuration
	Gpioled.pGPIOx =GPIOA;
 800020a:	4b18      	ldr	r3, [pc, #96]	; (800026c <main+0x68>)
 800020c:	60fb      	str	r3, [r7, #12]
	Gpioled.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_0;
 800020e:	2300      	movs	r3, #0
 8000210:	743b      	strb	r3, [r7, #16]
	Gpioled.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_OUT;
 8000212:	2301      	movs	r3, #1
 8000214:	747b      	strb	r3, [r7, #17]
	Gpioled.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000216:	2302      	movs	r3, #2
 8000218:	74bb      	strb	r3, [r7, #18]
	Gpioled.GPIO_PinConfig.GPIO_PinOPType = GPIO_OUT_TYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	753b      	strb	r3, [r7, #20]
	Gpioled.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4811      	ldr	r0, [pc, #68]	; (800026c <main+0x68>)
 8000226:	f000 f85d 	bl	80002e4 <GPIO_PeriClockControl>
	GPIO_Init(&Gpioled);
 800022a:	f107 030c 	add.w	r3, r7, #12
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f928 	bl	8000484 <GPIO_Init>


	//button configuration
	GpioBtn.pGPIOx =GPIOB;
 8000234:	4b0e      	ldr	r3, [pc, #56]	; (8000270 <main+0x6c>)
 8000236:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_12;
 8000238:	230c      	movs	r3, #12
 800023a:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_IT_FT;
 800023c:	2304      	movs	r3, #4
 800023e:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000240:	2302      	movs	r3, #2
 8000242:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 8000244:	2301      	movs	r3, #1
 8000246:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 8000248:	2101      	movs	r1, #1
 800024a:	4809      	ldr	r0, [pc, #36]	; (8000270 <main+0x6c>)
 800024c:	f000 f84a 	bl	80002e4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 8000250:	463b      	mov	r3, r7
 8000252:	4618      	mov	r0, r3
 8000254:	f000 f916 	bl	8000484 <GPIO_Init>



	//IRQ Configuration
	GPIO_IRQPriority_Config(IRQ_NO_EXTI15_10, 15);
 8000258:	210f      	movs	r1, #15
 800025a:	2028      	movs	r0, #40	; 0x28
 800025c:	f000 fb4a 	bl	80008f4 <GPIO_IRQPriority_Config>
	GPIO_IRQConfig(IRQ_NO_EXTI15_10, ENABLE);
 8000260:	2101      	movs	r1, #1
 8000262:	2028      	movs	r0, #40	; 0x28
 8000264:	f000 fac0 	bl	80007e8 <GPIO_IRQConfig>

	while(1){}
 8000268:	e7fe      	b.n	8000268 <main+0x64>
 800026a:	bf00      	nop
 800026c:	40020000 	.word	0x40020000
 8000270:	40020400 	.word	0x40020400

08000274 <EXTI15_10_IRQHandler>:

}

//ISR
void EXTI15_10_IRQHandler (void)
{
 8000274:	b580      	push	{r7, lr}
 8000276:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NUM_12);
 8000278:	200c      	movs	r0, #12
 800027a:	f000 fb65 	bl	8000948 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NUM_0);
 800027e:	2100      	movs	r1, #0
 8000280:	4802      	ldr	r0, [pc, #8]	; (800028c <EXTI15_10_IRQHandler+0x18>)
 8000282:	f000 fa9b 	bl	80007bc <GPIO_ToggleOutputPin>
}
 8000286:	bf00      	nop
 8000288:	bd80      	pop	{r7, pc}
 800028a:	bf00      	nop
 800028c:	40020000 	.word	0x40020000

08000290 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000290:	480d      	ldr	r0, [pc, #52]	; (80002c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000292:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000294:	480d      	ldr	r0, [pc, #52]	; (80002cc <LoopForever+0x6>)
  ldr r1, =_edata
 8000296:	490e      	ldr	r1, [pc, #56]	; (80002d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000298:	4a0e      	ldr	r2, [pc, #56]	; (80002d4 <LoopForever+0xe>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800029c:	e002      	b.n	80002a4 <LoopCopyDataInit>

0800029e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002a2:	3304      	adds	r3, #4

080002a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a8:	d3f9      	bcc.n	800029e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002aa:	4a0b      	ldr	r2, [pc, #44]	; (80002d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ac:	4c0b      	ldr	r4, [pc, #44]	; (80002dc <LoopForever+0x16>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b0:	e001      	b.n	80002b6 <LoopFillZerobss>

080002b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b4:	3204      	adds	r2, #4

080002b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b8:	d3fb      	bcc.n	80002b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002ba:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002be:	f000 fb63 	bl	8000988 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002c2:	f7ff ff9f 	bl	8000204 <main>

080002c6 <LoopForever>:

LoopForever:
    b LoopForever
 80002c6:	e7fe      	b.n	80002c6 <LoopForever>
  ldr   r0, =_estack
 80002c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d4:	080009f0 	.word	0x080009f0
  ldr r2, =_sbss
 80002d8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002dc:	2000001c 	.word	0x2000001c

080002e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e0:	e7fe      	b.n	80002e0 <ADC_IRQHandler>
	...

080002e4 <GPIO_PeriClockControl>:
* ReturnVal:	none
* Notes:		none
*/

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b083      	sub	sp, #12
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
 80002ec:	460b      	mov	r3, r1
 80002ee:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 80002f0:	78fb      	ldrb	r3, [r7, #3]
 80002f2:	2b01      	cmp	r3, #1
 80002f4:	d157      	bne.n	80003a6 <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a59      	ldr	r2, [pc, #356]	; (8000460 <GPIO_PeriClockControl+0x17c>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PERICLK_EN();
 80002fe:	4b59      	ldr	r3, [pc, #356]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a58      	ldr	r2, [pc, #352]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000304:	f043 0301 	orr.w	r3, r3, #1
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PERICLK_DI();
		}

	}
}
 800030a:	e0a3      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a56      	ldr	r2, [pc, #344]	; (8000468 <GPIO_PeriClockControl+0x184>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PeriClockControl+0x3e>
			GPIOB_PERICLK_EN();
 8000314:	4b53      	ldr	r3, [pc, #332]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a52      	ldr	r2, [pc, #328]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800031a:	f043 0302 	orr.w	r3, r3, #2
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e098      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a51      	ldr	r2, [pc, #324]	; (800046c <GPIO_PeriClockControl+0x188>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PeriClockControl+0x54>
			GPIOC_PERICLK_EN();
 800032a:	4b4e      	ldr	r3, [pc, #312]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a4d      	ldr	r2, [pc, #308]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000330:	f043 0304 	orr.w	r3, r3, #4
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e08d      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a4d      	ldr	r2, [pc, #308]	; (8000470 <GPIO_PeriClockControl+0x18c>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_PeriClockControl+0x6a>
			GPIOD_PERICLK_EN();
 8000340:	4b48      	ldr	r3, [pc, #288]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a47      	ldr	r2, [pc, #284]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000346:	f043 0308 	orr.w	r3, r3, #8
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e082      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a48      	ldr	r2, [pc, #288]	; (8000474 <GPIO_PeriClockControl+0x190>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_PeriClockControl+0x80>
			GPIOE_PERICLK_EN();
 8000356:	4b43      	ldr	r3, [pc, #268]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a42      	ldr	r2, [pc, #264]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800035c:	f043 0310 	orr.w	r3, r3, #16
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e077      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a44      	ldr	r2, [pc, #272]	; (8000478 <GPIO_PeriClockControl+0x194>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <GPIO_PeriClockControl+0x96>
			GPIOF_PERICLK_EN();
 800036c:	4b3d      	ldr	r3, [pc, #244]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a3c      	ldr	r2, [pc, #240]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000372:	f043 0320 	orr.w	r3, r3, #32
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e06c      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a3f      	ldr	r2, [pc, #252]	; (800047c <GPIO_PeriClockControl+0x198>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d106      	bne.n	8000390 <GPIO_PeriClockControl+0xac>
			GPIOG_PERICLK_EN();
 8000382:	4b38      	ldr	r3, [pc, #224]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a37      	ldr	r2, [pc, #220]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000388:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	e061      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	4a3b      	ldr	r2, [pc, #236]	; (8000480 <GPIO_PeriClockControl+0x19c>)
 8000394:	4293      	cmp	r3, r2
 8000396:	d15d      	bne.n	8000454 <GPIO_PeriClockControl+0x170>
			GPIOH_PERICLK_EN();
 8000398:	4b32      	ldr	r3, [pc, #200]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800039a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039c:	4a31      	ldr	r2, [pc, #196]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800039e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a4:	e056      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	4a2d      	ldr	r2, [pc, #180]	; (8000460 <GPIO_PeriClockControl+0x17c>)
 80003aa:	4293      	cmp	r3, r2
 80003ac:	d106      	bne.n	80003bc <GPIO_PeriClockControl+0xd8>
			GPIOA_PERICLK_DI();
 80003ae:	4b2d      	ldr	r3, [pc, #180]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b2:	4a2c      	ldr	r2, [pc, #176]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003b4:	f023 0301 	bic.w	r3, r3, #1
 80003b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ba:	e04b      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	4a2a      	ldr	r2, [pc, #168]	; (8000468 <GPIO_PeriClockControl+0x184>)
 80003c0:	4293      	cmp	r3, r2
 80003c2:	d106      	bne.n	80003d2 <GPIO_PeriClockControl+0xee>
			GPIOB_PERICLK_DI();
 80003c4:	4b27      	ldr	r3, [pc, #156]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c8:	4a26      	ldr	r2, [pc, #152]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003ca:	f023 0302 	bic.w	r3, r3, #2
 80003ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d0:	e040      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a25      	ldr	r2, [pc, #148]	; (800046c <GPIO_PeriClockControl+0x188>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d106      	bne.n	80003e8 <GPIO_PeriClockControl+0x104>
			GPIOC_PERICLK_DI();
 80003da:	4b22      	ldr	r3, [pc, #136]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003de:	4a21      	ldr	r2, [pc, #132]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003e0:	f023 0304 	bic.w	r3, r3, #4
 80003e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e6:	e035      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	4a21      	ldr	r2, [pc, #132]	; (8000470 <GPIO_PeriClockControl+0x18c>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d106      	bne.n	80003fe <GPIO_PeriClockControl+0x11a>
			GPIOD_PERICLK_DI();
 80003f0:	4b1c      	ldr	r3, [pc, #112]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f4:	4a1b      	ldr	r2, [pc, #108]	; (8000464 <GPIO_PeriClockControl+0x180>)
 80003f6:	f023 0308 	bic.w	r3, r3, #8
 80003fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fc:	e02a      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4a1c      	ldr	r2, [pc, #112]	; (8000474 <GPIO_PeriClockControl+0x190>)
 8000402:	4293      	cmp	r3, r2
 8000404:	d106      	bne.n	8000414 <GPIO_PeriClockControl+0x130>
			GPIOE_PERICLK_DI();
 8000406:	4b17      	ldr	r3, [pc, #92]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000408:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040a:	4a16      	ldr	r2, [pc, #88]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800040c:	f023 0310 	bic.w	r3, r3, #16
 8000410:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000412:	e01f      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	4a18      	ldr	r2, [pc, #96]	; (8000478 <GPIO_PeriClockControl+0x194>)
 8000418:	4293      	cmp	r3, r2
 800041a:	d106      	bne.n	800042a <GPIO_PeriClockControl+0x146>
			GPIOF_PERICLK_DI();
 800041c:	4b11      	ldr	r3, [pc, #68]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800041e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000420:	4a10      	ldr	r2, [pc, #64]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000422:	f023 0320 	bic.w	r3, r3, #32
 8000426:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000428:	e014      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4a13      	ldr	r2, [pc, #76]	; (800047c <GPIO_PeriClockControl+0x198>)
 800042e:	4293      	cmp	r3, r2
 8000430:	d106      	bne.n	8000440 <GPIO_PeriClockControl+0x15c>
			GPIOG_PERICLK_DI();
 8000432:	4b0c      	ldr	r3, [pc, #48]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000436:	4a0b      	ldr	r2, [pc, #44]	; (8000464 <GPIO_PeriClockControl+0x180>)
 8000438:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800043c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043e:	e009      	b.n	8000454 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4a0f      	ldr	r2, [pc, #60]	; (8000480 <GPIO_PeriClockControl+0x19c>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d105      	bne.n	8000454 <GPIO_PeriClockControl+0x170>
			GPIOH_PERICLK_DI();
 8000448:	4b06      	ldr	r3, [pc, #24]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800044a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044c:	4a05      	ldr	r2, [pc, #20]	; (8000464 <GPIO_PeriClockControl+0x180>)
 800044e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000452:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000454:	bf00      	nop
 8000456:	370c      	adds	r7, #12
 8000458:	46bd      	mov	sp, r7
 800045a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045e:	4770      	bx	lr
 8000460:	40020000 	.word	0x40020000
 8000464:	40023800 	.word	0x40023800
 8000468:	40020400 	.word	0x40020400
 800046c:	40020800 	.word	0x40020800
 8000470:	40020c00 	.word	0x40020c00
 8000474:	40021000 	.word	0x40021000
 8000478:	40021400 	.word	0x40021400
 800047c:	40021800 	.word	0x40021800
 8000480:	40021c00 	.word	0x40021c00

08000484 <GPIO_Init>:
* Parameter1:	Handle of GPIO port
* ReturnVal:	none
* Notes:		none
*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{	uint32_t temp=0;
 8000484:	b480      	push	{r7}
 8000486:	b089      	sub	sp, #36	; 0x24
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
 800048c:	2300      	movs	r3, #0
 800048e:	61bb      	str	r3, [r7, #24]
	//see if its not an interrupt mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	2b03      	cmp	r3, #3
 8000496:	d81f      	bhi.n	80004d8 <GPIO_Init+0x54>
	{
		//configure pin mode
		temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	461a      	mov	r2, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	005b      	lsls	r3, r3, #1
 80004a4:	fa02 f303 	lsl.w	r3, r2, r3
 80004a8:	61bb      	str	r3, [r7, #24]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clear bit fields before setting
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	681a      	ldr	r2, [r3, #0]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	4619      	mov	r1, r3
 80004b6:	2303      	movs	r3, #3
 80004b8:	408b      	lsls	r3, r1
 80004ba:	43db      	mvns	r3, r3
 80004bc:	4619      	mov	r1, r3
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	400a      	ands	r2, r1
 80004c4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |=temp; //set bits
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	6819      	ldr	r1, [r3, #0]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	69ba      	ldr	r2, [r7, #24]
 80004d2:	430a      	orrs	r2, r1
 80004d4:	601a      	str	r2, [r3, #0]
 80004d6:	e0c7      	b.n	8000668 <GPIO_Init+0x1e4>

	}
	//else configure for  interrupt mode
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	2b04      	cmp	r3, #4
 80004de:	d117      	bne.n	8000510 <GPIO_Init+0x8c>
		{
			//1. configure Falling trigger selection register
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e0:	4b48      	ldr	r3, [pc, #288]	; (8000604 <GPIO_Init+0x180>)
 80004e2:	68db      	ldr	r3, [r3, #12]
 80004e4:	687a      	ldr	r2, [r7, #4]
 80004e6:	7912      	ldrb	r2, [r2, #4]
 80004e8:	4611      	mov	r1, r2
 80004ea:	2201      	movs	r2, #1
 80004ec:	408a      	lsls	r2, r1
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a44      	ldr	r2, [pc, #272]	; (8000604 <GPIO_Init+0x180>)
 80004f2:	430b      	orrs	r3, r1
 80004f4:	60d3      	str	r3, [r2, #12]
			//Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f6:	4b43      	ldr	r3, [pc, #268]	; (8000604 <GPIO_Init+0x180>)
 80004f8:	689b      	ldr	r3, [r3, #8]
 80004fa:	687a      	ldr	r2, [r7, #4]
 80004fc:	7912      	ldrb	r2, [r2, #4]
 80004fe:	4611      	mov	r1, r2
 8000500:	2201      	movs	r2, #1
 8000502:	408a      	lsls	r2, r1
 8000504:	43d2      	mvns	r2, r2
 8000506:	4611      	mov	r1, r2
 8000508:	4a3e      	ldr	r2, [pc, #248]	; (8000604 <GPIO_Init+0x180>)
 800050a:	400b      	ands	r3, r1
 800050c:	6093      	str	r3, [r2, #8]
 800050e:	e035      	b.n	800057c <GPIO_Init+0xf8>

		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	795b      	ldrb	r3, [r3, #5]
 8000514:	2b05      	cmp	r3, #5
 8000516:	d117      	bne.n	8000548 <GPIO_Init+0xc4>
		{
			//1. configure Rising trigger selection register
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000518:	4b3a      	ldr	r3, [pc, #232]	; (8000604 <GPIO_Init+0x180>)
 800051a:	689b      	ldr	r3, [r3, #8]
 800051c:	687a      	ldr	r2, [r7, #4]
 800051e:	7912      	ldrb	r2, [r2, #4]
 8000520:	4611      	mov	r1, r2
 8000522:	2201      	movs	r2, #1
 8000524:	408a      	lsls	r2, r1
 8000526:	4611      	mov	r1, r2
 8000528:	4a36      	ldr	r2, [pc, #216]	; (8000604 <GPIO_Init+0x180>)
 800052a:	430b      	orrs	r3, r1
 800052c:	6093      	str	r3, [r2, #8]
			//Clear corresponding FTSR bit
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052e:	4b35      	ldr	r3, [pc, #212]	; (8000604 <GPIO_Init+0x180>)
 8000530:	68db      	ldr	r3, [r3, #12]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	43d2      	mvns	r2, r2
 800053e:	4611      	mov	r1, r2
 8000540:	4a30      	ldr	r2, [pc, #192]	; (8000604 <GPIO_Init+0x180>)
 8000542:	400b      	ands	r3, r1
 8000544:	60d3      	str	r3, [r2, #12]
 8000546:	e019      	b.n	800057c <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	795b      	ldrb	r3, [r3, #5]
 800054c:	2b06      	cmp	r3, #6
 800054e:	d115      	bne.n	800057c <GPIO_Init+0xf8>
		{
			//1. configure Falling and Rising trigger selection register
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000550:	4b2c      	ldr	r3, [pc, #176]	; (8000604 <GPIO_Init+0x180>)
 8000552:	68db      	ldr	r3, [r3, #12]
 8000554:	687a      	ldr	r2, [r7, #4]
 8000556:	7912      	ldrb	r2, [r2, #4]
 8000558:	4611      	mov	r1, r2
 800055a:	2201      	movs	r2, #1
 800055c:	408a      	lsls	r2, r1
 800055e:	4611      	mov	r1, r2
 8000560:	4a28      	ldr	r2, [pc, #160]	; (8000604 <GPIO_Init+0x180>)
 8000562:	430b      	orrs	r3, r1
 8000564:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000566:	4b27      	ldr	r3, [pc, #156]	; (8000604 <GPIO_Init+0x180>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	4611      	mov	r1, r2
 8000576:	4a23      	ldr	r2, [pc, #140]	; (8000604 <GPIO_Init+0x180>)
 8000578:	430b      	orrs	r3, r1
 800057a:	6093      	str	r3, [r2, #8]
		}
		//2. configure GPIO port selection in SYSCFG_EXTIC
		uint8_t temp1 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4; //to get which exti control register
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	089b      	lsrs	r3, r3, #2
 8000582:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4; //to determine section within control register determined above
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	f003 0303 	and.w	r3, r3, #3
 800058c:	75bb      	strb	r3, [r7, #22]
		uint8_t portcode = 0;
 800058e:	2300      	movs	r3, #0
 8000590:	77fb      	strb	r3, [r7, #31]

		if(pGPIOHandle->pGPIOx == GPIOA){portcode=0;}
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	4a1c      	ldr	r2, [pc, #112]	; (8000608 <GPIO_Init+0x184>)
 8000598:	4293      	cmp	r3, r2
 800059a:	d102      	bne.n	80005a2 <GPIO_Init+0x11e>
 800059c:	2300      	movs	r3, #0
 800059e:	77fb      	strb	r3, [r7, #31]
 80005a0:	e047      	b.n	8000632 <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOB){portcode=1;}
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	4a19      	ldr	r2, [pc, #100]	; (800060c <GPIO_Init+0x188>)
 80005a8:	4293      	cmp	r3, r2
 80005aa:	d102      	bne.n	80005b2 <GPIO_Init+0x12e>
 80005ac:	2301      	movs	r3, #1
 80005ae:	77fb      	strb	r3, [r7, #31]
 80005b0:	e03f      	b.n	8000632 <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOC){portcode=2;}
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	4a16      	ldr	r2, [pc, #88]	; (8000610 <GPIO_Init+0x18c>)
 80005b8:	4293      	cmp	r3, r2
 80005ba:	d102      	bne.n	80005c2 <GPIO_Init+0x13e>
 80005bc:	2302      	movs	r3, #2
 80005be:	77fb      	strb	r3, [r7, #31]
 80005c0:	e037      	b.n	8000632 <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOD){portcode=3;}
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a13      	ldr	r2, [pc, #76]	; (8000614 <GPIO_Init+0x190>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d102      	bne.n	80005d2 <GPIO_Init+0x14e>
 80005cc:	2303      	movs	r3, #3
 80005ce:	77fb      	strb	r3, [r7, #31]
 80005d0:	e02f      	b.n	8000632 <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOE){portcode=4;}
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	4a10      	ldr	r2, [pc, #64]	; (8000618 <GPIO_Init+0x194>)
 80005d8:	4293      	cmp	r3, r2
 80005da:	d102      	bne.n	80005e2 <GPIO_Init+0x15e>
 80005dc:	2304      	movs	r3, #4
 80005de:	77fb      	strb	r3, [r7, #31]
 80005e0:	e027      	b.n	8000632 <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOF){portcode=5;}
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	4a0d      	ldr	r2, [pc, #52]	; (800061c <GPIO_Init+0x198>)
 80005e8:	4293      	cmp	r3, r2
 80005ea:	d102      	bne.n	80005f2 <GPIO_Init+0x16e>
 80005ec:	2305      	movs	r3, #5
 80005ee:	77fb      	strb	r3, [r7, #31]
 80005f0:	e01f      	b.n	8000632 <GPIO_Init+0x1ae>
		else if(pGPIOHandle->pGPIOx == GPIOG){portcode=6;}
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	4a0a      	ldr	r2, [pc, #40]	; (8000620 <GPIO_Init+0x19c>)
 80005f8:	4293      	cmp	r3, r2
 80005fa:	d113      	bne.n	8000624 <GPIO_Init+0x1a0>
 80005fc:	2306      	movs	r3, #6
 80005fe:	77fb      	strb	r3, [r7, #31]
 8000600:	e017      	b.n	8000632 <GPIO_Init+0x1ae>
 8000602:	bf00      	nop
 8000604:	40013c00 	.word	0x40013c00
 8000608:	40020000 	.word	0x40020000
 800060c:	40020400 	.word	0x40020400
 8000610:	40020800 	.word	0x40020800
 8000614:	40020c00 	.word	0x40020c00
 8000618:	40021000 	.word	0x40021000
 800061c:	40021400 	.word	0x40021400
 8000620:	40021800 	.word	0x40021800
		else if(pGPIOHandle->pGPIOx == GPIOH){portcode=7;}
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	4a60      	ldr	r2, [pc, #384]	; (80007ac <GPIO_Init+0x328>)
 800062a:	4293      	cmp	r3, r2
 800062c:	d101      	bne.n	8000632 <GPIO_Init+0x1ae>
 800062e:	2307      	movs	r3, #7
 8000630:	77fb      	strb	r3, [r7, #31]

		SYSCFG_PERICLK_EN();
 8000632:	4b5f      	ldr	r3, [pc, #380]	; (80007b0 <GPIO_Init+0x32c>)
 8000634:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000636:	4a5e      	ldr	r2, [pc, #376]	; (80007b0 <GPIO_Init+0x32c>)
 8000638:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800063c:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 800063e:	7ffa      	ldrb	r2, [r7, #31]
 8000640:	7dbb      	ldrb	r3, [r7, #22]
 8000642:	009b      	lsls	r3, r3, #2
 8000644:	fa02 f103 	lsl.w	r1, r2, r3
 8000648:	4a5a      	ldr	r2, [pc, #360]	; (80007b4 <GPIO_Init+0x330>)
 800064a:	7dfb      	ldrb	r3, [r7, #23]
 800064c:	3302      	adds	r3, #2
 800064e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3. enable EXTI interrupt delivery via IMR
		EXTI->IMR |= 1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000652:	4b59      	ldr	r3, [pc, #356]	; (80007b8 <GPIO_Init+0x334>)
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	687a      	ldr	r2, [r7, #4]
 8000658:	7912      	ldrb	r2, [r2, #4]
 800065a:	4611      	mov	r1, r2
 800065c:	2201      	movs	r2, #1
 800065e:	408a      	lsls	r2, r1
 8000660:	4611      	mov	r1, r2
 8000662:	4a55      	ldr	r2, [pc, #340]	; (80007b8 <GPIO_Init+0x334>)
 8000664:	430b      	orrs	r3, r1
 8000666:	6013      	str	r3, [r2, #0]
	}
	//configure speed
	temp=0;
 8000668:	2300      	movs	r3, #0
 800066a:	61bb      	str	r3, [r7, #24]
	temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	799b      	ldrb	r3, [r3, #6]
 8000670:	461a      	mov	r2, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	791b      	ldrb	r3, [r3, #4]
 8000676:	005b      	lsls	r3, r3, #1
 8000678:	fa02 f303 	lsl.w	r3, r2, r3
 800067c:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->OSPEEDR  &= ~(0x3 <<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	689a      	ldr	r2, [r3, #8]
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	791b      	ldrb	r3, [r3, #4]
 8000688:	4619      	mov	r1, r3
 800068a:	2303      	movs	r3, #3
 800068c:	408b      	lsls	r3, r1
 800068e:	43db      	mvns	r3, r3
 8000690:	4619      	mov	r1, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	400a      	ands	r2, r1
 8000698:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	6899      	ldr	r1, [r3, #8]
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	69ba      	ldr	r2, [r7, #24]
 80006a6:	430a      	orrs	r2, r1
 80006a8:	609a      	str	r2, [r3, #8]
	//configure pullup/pulldown
	temp=0;
 80006aa:	2300      	movs	r3, #0
 80006ac:	61bb      	str	r3, [r7, #24]
	temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	79db      	ldrb	r3, [r3, #7]
 80006b2:	461a      	mov	r2, r3
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	791b      	ldrb	r3, [r3, #4]
 80006b8:	005b      	lsls	r3, r3, #1
 80006ba:	fa02 f303 	lsl.w	r3, r2, r3
 80006be:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->PUPDR  &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	68da      	ldr	r2, [r3, #12]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	791b      	ldrb	r3, [r3, #4]
 80006ca:	4619      	mov	r1, r3
 80006cc:	2303      	movs	r3, #3
 80006ce:	408b      	lsls	r3, r1
 80006d0:	43db      	mvns	r3, r3
 80006d2:	4619      	mov	r1, r3
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	400a      	ands	r2, r1
 80006da:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	68d9      	ldr	r1, [r3, #12]
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	69ba      	ldr	r2, [r7, #24]
 80006e8:	430a      	orrs	r2, r1
 80006ea:	60da      	str	r2, [r3, #12]
	//configure output type
	temp=0;
 80006ec:	2300      	movs	r3, #0
 80006ee:	61bb      	str	r3, [r7, #24]
	temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	7a1b      	ldrb	r3, [r3, #8]
 80006f4:	461a      	mov	r2, r3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	791b      	ldrb	r3, [r3, #4]
 80006fa:	fa02 f303 	lsl.w	r3, r2, r3
 80006fe:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->OTYPER  &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	685a      	ldr	r2, [r3, #4]
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	791b      	ldrb	r3, [r3, #4]
 800070a:	4619      	mov	r1, r3
 800070c:	2301      	movs	r3, #1
 800070e:	408b      	lsls	r3, r1
 8000710:	43db      	mvns	r3, r3
 8000712:	4619      	mov	r1, r3
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	400a      	ands	r2, r1
 800071a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	6859      	ldr	r1, [r3, #4]
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	69ba      	ldr	r2, [r7, #24]
 8000728:	430a      	orrs	r2, r1
 800072a:	605a      	str	r2, [r3, #4]

	temp=0;
 800072c:	2300      	movs	r3, #0
 800072e:	61bb      	str	r3, [r7, #24]

	if((pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode) == GPIO_MODE_ALTFN)
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	7a5b      	ldrb	r3, [r3, #9]
 8000734:	2b02      	cmp	r3, #2
 8000736:	d132      	bne.n	800079e <GPIO_Init+0x31a>
	{
		//Need to revisit this to understand
		uint32_t temp1, temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	791b      	ldrb	r3, [r3, #4]
 800073c:	08db      	lsrs	r3, r3, #3
 800073e:	b2db      	uxtb	r3, r3
 8000740:	613b      	str	r3, [r7, #16]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	791b      	ldrb	r3, [r3, #4]
 8000746:	f003 0307 	and.w	r3, r3, #7
 800074a:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->AFR[temp1]&= ~(0xF<<(4*temp2));
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	693a      	ldr	r2, [r7, #16]
 8000752:	3208      	adds	r2, #8
 8000754:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000758:	68fb      	ldr	r3, [r7, #12]
 800075a:	009b      	lsls	r3, r3, #2
 800075c:	210f      	movs	r1, #15
 800075e:	fa01 f303 	lsl.w	r3, r1, r3
 8000762:	43db      	mvns	r3, r3
 8000764:	4619      	mov	r1, r3
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	4011      	ands	r1, r2
 800076c:	693a      	ldr	r2, [r7, #16]
 800076e:	3208      	adds	r2, #8
 8000770:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode<<(4*temp2));
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	693a      	ldr	r2, [r7, #16]
 800077a:	3208      	adds	r2, #8
 800077c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	7a5b      	ldrb	r3, [r3, #9]
 8000784:	4619      	mov	r1, r3
 8000786:	68fb      	ldr	r3, [r7, #12]
 8000788:	009b      	lsls	r3, r3, #2
 800078a:	fa01 f303 	lsl.w	r3, r1, r3
 800078e:	4619      	mov	r1, r3
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	4311      	orrs	r1, r2
 8000796:	693a      	ldr	r2, [r7, #16]
 8000798:	3208      	adds	r2, #8
 800079a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}




}
 800079e:	bf00      	nop
 80007a0:	3724      	adds	r7, #36	; 0x24
 80007a2:	46bd      	mov	sp, r7
 80007a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a8:	4770      	bx	lr
 80007aa:	bf00      	nop
 80007ac:	40021c00 	.word	0x40021c00
 80007b0:	40023800 	.word	0x40023800
 80007b4:	40013800 	.word	0x40013800
 80007b8:	40013c00 	.word	0x40013c00

080007bc <GPIO_ToggleOutputPin>:
* Parameter2:	Pin of GPIO port
* ReturnVal:	none
* Notes:		none
*/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007bc:	b480      	push	{r7}
 80007be:	b083      	sub	sp, #12
 80007c0:	af00      	add	r7, sp, #0
 80007c2:	6078      	str	r0, [r7, #4]
 80007c4:	460b      	mov	r3, r1
 80007c6:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1<<PinNumber);
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	695b      	ldr	r3, [r3, #20]
 80007cc:	78fa      	ldrb	r2, [r7, #3]
 80007ce:	2101      	movs	r1, #1
 80007d0:	fa01 f202 	lsl.w	r2, r1, r2
 80007d4:	405a      	eors	r2, r3
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	615a      	str	r2, [r3, #20]


}
 80007da:	bf00      	nop
 80007dc:	370c      	adds	r7, #12
 80007de:	46bd      	mov	sp, r7
 80007e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e4:	4770      	bx	lr
	...

080007e8 <GPIO_IRQConfig>:
* Parameter2:
* ReturnVal:	none
* Notes:		none
*/
void GPIO_IRQConfig(uint8_t IRQNumber,  uint8_t EnorDi)
{
 80007e8:	b480      	push	{r7}
 80007ea:	b083      	sub	sp, #12
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	4603      	mov	r3, r0
 80007f0:	460a      	mov	r2, r1
 80007f2:	71fb      	strb	r3, [r7, #7]
 80007f4:	4613      	mov	r3, r2
 80007f6:	71bb      	strb	r3, [r7, #6]

	if(EnorDi== ENABLE)
 80007f8:	79bb      	ldrb	r3, [r7, #6]
 80007fa:	2b01      	cmp	r3, #1
 80007fc:	d133      	bne.n	8000866 <GPIO_IRQConfig+0x7e>
	{
		if(IRQNumber <=31)
 80007fe:	79fb      	ldrb	r3, [r7, #7]
 8000800:	2b1f      	cmp	r3, #31
 8000802:	d80a      	bhi.n	800081a <GPIO_IRQConfig+0x32>
		{
			*NVIC_ISER0 |= (1<<IRQNumber);
 8000804:	4b35      	ldr	r3, [pc, #212]	; (80008dc <GPIO_IRQConfig+0xf4>)
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	79fa      	ldrb	r2, [r7, #7]
 800080a:	2101      	movs	r1, #1
 800080c:	fa01 f202 	lsl.w	r2, r1, r2
 8000810:	4611      	mov	r1, r2
 8000812:	4a32      	ldr	r2, [pc, #200]	; (80008dc <GPIO_IRQConfig+0xf4>)
 8000814:	430b      	orrs	r3, r1
 8000816:	6013      	str	r3, [r2, #0]
		{
			*NVIC_ICER2 |= (1<<IRQNumber%64);
		}
	}

}
 8000818:	e059      	b.n	80008ce <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >31 &&  IRQNumber<64 )
 800081a:	79fb      	ldrb	r3, [r7, #7]
 800081c:	2b1f      	cmp	r3, #31
 800081e:	d90f      	bls.n	8000840 <GPIO_IRQConfig+0x58>
 8000820:	79fb      	ldrb	r3, [r7, #7]
 8000822:	2b3f      	cmp	r3, #63	; 0x3f
 8000824:	d80c      	bhi.n	8000840 <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |= (1<<IRQNumber%32);
 8000826:	4b2e      	ldr	r3, [pc, #184]	; (80008e0 <GPIO_IRQConfig+0xf8>)
 8000828:	681b      	ldr	r3, [r3, #0]
 800082a:	79fa      	ldrb	r2, [r7, #7]
 800082c:	f002 021f 	and.w	r2, r2, #31
 8000830:	2101      	movs	r1, #1
 8000832:	fa01 f202 	lsl.w	r2, r1, r2
 8000836:	4611      	mov	r1, r2
 8000838:	4a29      	ldr	r2, [pc, #164]	; (80008e0 <GPIO_IRQConfig+0xf8>)
 800083a:	430b      	orrs	r3, r1
 800083c:	6013      	str	r3, [r2, #0]
 800083e:	e046      	b.n	80008ce <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >64 &&  IRQNumber<96 )
 8000840:	79fb      	ldrb	r3, [r7, #7]
 8000842:	2b40      	cmp	r3, #64	; 0x40
 8000844:	d943      	bls.n	80008ce <GPIO_IRQConfig+0xe6>
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	2b5f      	cmp	r3, #95	; 0x5f
 800084a:	d840      	bhi.n	80008ce <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |= (1<<IRQNumber%64);
 800084c:	4b25      	ldr	r3, [pc, #148]	; (80008e4 <GPIO_IRQConfig+0xfc>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	79fa      	ldrb	r2, [r7, #7]
 8000852:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000856:	2101      	movs	r1, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4611      	mov	r1, r2
 800085e:	4a21      	ldr	r2, [pc, #132]	; (80008e4 <GPIO_IRQConfig+0xfc>)
 8000860:	430b      	orrs	r3, r1
 8000862:	6013      	str	r3, [r2, #0]
}
 8000864:	e033      	b.n	80008ce <GPIO_IRQConfig+0xe6>
		if(IRQNumber <=31)
 8000866:	79fb      	ldrb	r3, [r7, #7]
 8000868:	2b1f      	cmp	r3, #31
 800086a:	d80a      	bhi.n	8000882 <GPIO_IRQConfig+0x9a>
			*NVIC_ICER0 |= (1<<IRQNumber);
 800086c:	4b1e      	ldr	r3, [pc, #120]	; (80008e8 <GPIO_IRQConfig+0x100>)
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	79fa      	ldrb	r2, [r7, #7]
 8000872:	2101      	movs	r1, #1
 8000874:	fa01 f202 	lsl.w	r2, r1, r2
 8000878:	4611      	mov	r1, r2
 800087a:	4a1b      	ldr	r2, [pc, #108]	; (80008e8 <GPIO_IRQConfig+0x100>)
 800087c:	430b      	orrs	r3, r1
 800087e:	6013      	str	r3, [r2, #0]
}
 8000880:	e025      	b.n	80008ce <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >31 &&  IRQNumber<64 )
 8000882:	79fb      	ldrb	r3, [r7, #7]
 8000884:	2b1f      	cmp	r3, #31
 8000886:	d90f      	bls.n	80008a8 <GPIO_IRQConfig+0xc0>
 8000888:	79fb      	ldrb	r3, [r7, #7]
 800088a:	2b3f      	cmp	r3, #63	; 0x3f
 800088c:	d80c      	bhi.n	80008a8 <GPIO_IRQConfig+0xc0>
			*NVIC_ICER1 |= (1<<IRQNumber%32);
 800088e:	4b17      	ldr	r3, [pc, #92]	; (80008ec <GPIO_IRQConfig+0x104>)
 8000890:	681b      	ldr	r3, [r3, #0]
 8000892:	79fa      	ldrb	r2, [r7, #7]
 8000894:	f002 021f 	and.w	r2, r2, #31
 8000898:	2101      	movs	r1, #1
 800089a:	fa01 f202 	lsl.w	r2, r1, r2
 800089e:	4611      	mov	r1, r2
 80008a0:	4a12      	ldr	r2, [pc, #72]	; (80008ec <GPIO_IRQConfig+0x104>)
 80008a2:	430b      	orrs	r3, r1
 80008a4:	6013      	str	r3, [r2, #0]
 80008a6:	e012      	b.n	80008ce <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >64 &&  IRQNumber<96 )
 80008a8:	79fb      	ldrb	r3, [r7, #7]
 80008aa:	2b40      	cmp	r3, #64	; 0x40
 80008ac:	d90f      	bls.n	80008ce <GPIO_IRQConfig+0xe6>
 80008ae:	79fb      	ldrb	r3, [r7, #7]
 80008b0:	2b5f      	cmp	r3, #95	; 0x5f
 80008b2:	d80c      	bhi.n	80008ce <GPIO_IRQConfig+0xe6>
			*NVIC_ICER2 |= (1<<IRQNumber%64);
 80008b4:	4b0e      	ldr	r3, [pc, #56]	; (80008f0 <GPIO_IRQConfig+0x108>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	79fa      	ldrb	r2, [r7, #7]
 80008ba:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008be:	2101      	movs	r1, #1
 80008c0:	fa01 f202 	lsl.w	r2, r1, r2
 80008c4:	4611      	mov	r1, r2
 80008c6:	4a0a      	ldr	r2, [pc, #40]	; (80008f0 <GPIO_IRQConfig+0x108>)
 80008c8:	430b      	orrs	r3, r1
 80008ca:	6013      	str	r3, [r2, #0]
}
 80008cc:	e7ff      	b.n	80008ce <GPIO_IRQConfig+0xe6>
 80008ce:	bf00      	nop
 80008d0:	370c      	adds	r7, #12
 80008d2:	46bd      	mov	sp, r7
 80008d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d8:	4770      	bx	lr
 80008da:	bf00      	nop
 80008dc:	e000e100 	.word	0xe000e100
 80008e0:	e000e104 	.word	0xe000e104
 80008e4:	e000e108 	.word	0xe000e108
 80008e8:	e000e180 	.word	0xe000e180
 80008ec:	e000e184 	.word	0xe000e184
 80008f0:	e000e188 	.word	0xe000e188

080008f4 <GPIO_IRQPriority_Config>:

void GPIO_IRQPriority_Config(uint8_t IRQNumber, uint32_t IRQPriority)
{
 80008f4:	b480      	push	{r7}
 80008f6:	b085      	sub	sp, #20
 80008f8:	af00      	add	r7, sp, #0
 80008fa:	4603      	mov	r3, r0
 80008fc:	6039      	str	r1, [r7, #0]
 80008fe:	71fb      	strb	r3, [r7, #7]
  //determine IPR register
	uint8_t iprx =  IRQNumber/4;
 8000900:	79fb      	ldrb	r3, [r7, #7]
 8000902:	089b      	lsrs	r3, r3, #2
 8000904:	73fb      	strb	r3, [r7, #15]
	//determine IPR register section
	uint8_t iprx_section = IRQNumber%4;
 8000906:	79fb      	ldrb	r3, [r7, #7]
 8000908:	f003 0303 	and.w	r3, r3, #3
 800090c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8* iprx_section) + (8-NO_OF_PRIO_BITS_IMPLEMENTED);
 800090e:	7bbb      	ldrb	r3, [r7, #14]
 8000910:	00db      	lsls	r3, r3, #3
 8000912:	b2db      	uxtb	r3, r3
 8000914:	3304      	adds	r3, #4
 8000916:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR+iprx) |= (IRQPriority<<(shift_amount));
 8000918:	7bfb      	ldrb	r3, [r7, #15]
 800091a:	009b      	lsls	r3, r3, #2
 800091c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000920:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000924:	6819      	ldr	r1, [r3, #0]
 8000926:	7b7b      	ldrb	r3, [r7, #13]
 8000928:	683a      	ldr	r2, [r7, #0]
 800092a:	409a      	lsls	r2, r3
 800092c:	7bfb      	ldrb	r3, [r7, #15]
 800092e:	009b      	lsls	r3, r3, #2
 8000930:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000934:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000938:	430a      	orrs	r2, r1
 800093a:	601a      	str	r2, [r3, #0]
}
 800093c:	bf00      	nop
 800093e:	3714      	adds	r7, #20
 8000940:	46bd      	mov	sp, r7
 8000942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000946:	4770      	bx	lr

08000948 <GPIO_IRQHandling>:
* Parameter2:	P
* ReturnVal:	none
* Notes:		none
*/
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000948:	b480      	push	{r7}
 800094a:	b083      	sub	sp, #12
 800094c:	af00      	add	r7, sp, #0
 800094e:	4603      	mov	r3, r0
 8000950:	71fb      	strb	r3, [r7, #7]
	//clear exti pending register
	if (EXTI->PR& (1<<PinNumber))
 8000952:	4b0c      	ldr	r3, [pc, #48]	; (8000984 <GPIO_IRQHandling+0x3c>)
 8000954:	695b      	ldr	r3, [r3, #20]
 8000956:	79fa      	ldrb	r2, [r7, #7]
 8000958:	2101      	movs	r1, #1
 800095a:	fa01 f202 	lsl.w	r2, r1, r2
 800095e:	4013      	ands	r3, r2
 8000960:	2b00      	cmp	r3, #0
 8000962:	d009      	beq.n	8000978 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1<<PinNumber);
 8000964:	4b07      	ldr	r3, [pc, #28]	; (8000984 <GPIO_IRQHandling+0x3c>)
 8000966:	695b      	ldr	r3, [r3, #20]
 8000968:	79fa      	ldrb	r2, [r7, #7]
 800096a:	2101      	movs	r1, #1
 800096c:	fa01 f202 	lsl.w	r2, r1, r2
 8000970:	4611      	mov	r1, r2
 8000972:	4a04      	ldr	r2, [pc, #16]	; (8000984 <GPIO_IRQHandling+0x3c>)
 8000974:	430b      	orrs	r3, r1
 8000976:	6153      	str	r3, [r2, #20]
	}
}
 8000978:	bf00      	nop
 800097a:	370c      	adds	r7, #12
 800097c:	46bd      	mov	sp, r7
 800097e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000982:	4770      	bx	lr
 8000984:	40013c00 	.word	0x40013c00

08000988 <__libc_init_array>:
 8000988:	b570      	push	{r4, r5, r6, lr}
 800098a:	4e0d      	ldr	r6, [pc, #52]	; (80009c0 <__libc_init_array+0x38>)
 800098c:	4c0d      	ldr	r4, [pc, #52]	; (80009c4 <__libc_init_array+0x3c>)
 800098e:	1ba4      	subs	r4, r4, r6
 8000990:	10a4      	asrs	r4, r4, #2
 8000992:	2500      	movs	r5, #0
 8000994:	42a5      	cmp	r5, r4
 8000996:	d109      	bne.n	80009ac <__libc_init_array+0x24>
 8000998:	4e0b      	ldr	r6, [pc, #44]	; (80009c8 <__libc_init_array+0x40>)
 800099a:	4c0c      	ldr	r4, [pc, #48]	; (80009cc <__libc_init_array+0x44>)
 800099c:	f000 f818 	bl	80009d0 <_init>
 80009a0:	1ba4      	subs	r4, r4, r6
 80009a2:	10a4      	asrs	r4, r4, #2
 80009a4:	2500      	movs	r5, #0
 80009a6:	42a5      	cmp	r5, r4
 80009a8:	d105      	bne.n	80009b6 <__libc_init_array+0x2e>
 80009aa:	bd70      	pop	{r4, r5, r6, pc}
 80009ac:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009b0:	4798      	blx	r3
 80009b2:	3501      	adds	r5, #1
 80009b4:	e7ee      	b.n	8000994 <__libc_init_array+0xc>
 80009b6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009ba:	4798      	blx	r3
 80009bc:	3501      	adds	r5, #1
 80009be:	e7f2      	b.n	80009a6 <__libc_init_array+0x1e>
 80009c0:	080009e8 	.word	0x080009e8
 80009c4:	080009e8 	.word	0x080009e8
 80009c8:	080009e8 	.word	0x080009e8
 80009cc:	080009ec 	.word	0x080009ec

080009d0 <_init>:
 80009d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009d2:	bf00      	nop
 80009d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009d6:	bc08      	pop	{r3}
 80009d8:	469e      	mov	lr, r3
 80009da:	4770      	bx	lr

080009dc <_fini>:
 80009dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009de:	bf00      	nop
 80009e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009e2:	bc08      	pop	{r3}
 80009e4:	469e      	mov	lr, r3
 80009e6:	4770      	bx	lr
